1. Criar um projeto Unit.

a) Abra o aplicativo UnityHub.

b) Na aba Projects, crie um projeto Unity 2019 acionando a opção New.

c) Prossiga atribuindo o template 3D e nome Atividade06 ao projeto.

d) Verifique se a localização do projeto está indicando a pasta JOD061\Atividades. Senão estiver, atualize para o caminho correto (C:\Users\SEU-LOGIN\Documentos\JOD061\Atividades).

e) Acesse a Asset Store e procure por PUN2 - FREE. Importe o pacote na Unity. 

f) Cole o AppID criado na Photon Cloud.

g) Crie uma pasta Scripts e uma pasta Resources dentro da pasta Assets.



2. Criar uma cena de entrada do jogo.

a) Renomeie a cena SampleScene para LobbyScene.

b) Crie um objeto Canvas contendo um componente Text, um componente InputField e um componente Button. 

c) Faça o componente Text exibir o texto Seu Nome, o componente InputField exibir a dica Digite um nome e o componente Button exibir o texto Jogar.

d) Crie um GameObject vazio com o nome Photon Network Manager.

e) Crie na pasta Scripts um script com o nome PhotonConnection. Ligue o script ao objeto Photon Network Manager.

f) Abra o script PhotonConnection.cs no VSCode. Faça a classe herdar de MonoBehaviourPunCallbacks e usar os pacotes Photon.Pun, Photon.Realtime e UnityEngine.UI.

g) Declare uma variável InputField playerName, uma variável string gameVersion, uma variável string roomName e uma variável inteiro maxPlayers na classe PhotonConnection.

h) Implemente o método Awave alterando a propriedade AutomaticallySyncScene para true.

void Awake() {
   PhotonNetwork.AutomaticallySyncScene = true;
}

i) Implemente o método Connect para fazer a conexão com o Photon Cloud. Se o PhotonNetwork não está conectado estabeleça uma conexão atribuindo o valor de gameVersion e chamando o método ConnectUsingSettings. Se estiver conectado, entre em uma sala através do método JoinRoom. Atribua a propriedade NickName o valor do componente InputField.

public void Connect() {   
   if (!PhotonNetwork.IsConnected) {
        PhotonNetwork.NickName =  playerName.text;
        PhotonNetwork.GameVersion = this.gameVersion;
	PhotonNetwork.ConnectUsingSettings();
   } else {
       PhotonNetwork.JoinRoom(this.roomName);
   }
}

j) Implemente o método OnConnectedToMaster para entrar ou criar uma room após estabelecer a conexão com o Photon.

public override void OnConnectedToMaster() {
  RoomOptions options = new RoomOptions();
  options.MaxPlayers = this.maxPlayers;
  PhotonNetwork.JoinOrCreateRoom(this.roomName, options, TypedLobby.Default);
}

k) Implemente o método OnJoinedRoom para carregar a cena do jogo.

public override void OnJoinedRoom() {
   PhotonNetwork.LoadLevel("GameScene");
}

l) Na Unity associe o componente InputField a propriedade playerName do Photon Connection. Atribua valores para as propriedades GameVersion, RoomName e MaxPlayer.

m) Associe o evento On Click do componente Button ao componente Photon Manager para que seja executado o método PhotonConnection.Connect.



3. Criar uma cena do jogo.

a) Crie uma nova cena com o nome de GameScene.

b) Crie um objeto Canvas contendo um componente Button. Posicione o botão no canto superior esquerdo da tela e faça ele exibir o texto Sair.


c) Crie um Cube com o nome Player.

d) Adicione ao objeto Player os componentes Photon View, Photon Transform View e Ridigbody. Desative a ação da gravidade e fixe a rotação do objeto nos eixos X, Y e Z.

h)

b) Crie um GameObject vazio com o nome Game Manager.






4. Versionar o projeto Unity no GitHub.

a) No VSCode, pressione as teclas Ctrl+Shift+G para acessar o painel do Git. Em seguida, clique em Stage All.

b) Efetive o commit acionando a opção Commit All. Não esqueça de por um comentário ao commit (Ex.: Criando o projeto Atividade06). 

c) Envie os arquivos versionados para o git remoto acionando a opção Push. Informe usuário/senha e acione a opção Sign in.
